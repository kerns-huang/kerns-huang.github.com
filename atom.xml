<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kerns的小窝</title>
  
  <subtitle>行走在路上，无愧于心。</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2025-03-03T10:01:10.360Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>kerns</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ai短视频创作整理</title>
    <link href="http://yoursite.com/2025/03/03/ai%E7%9F%AD%E8%A7%86%E9%A2%91%E5%88%9B%E4%BD%9C%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2025/03/03/ai%E7%9F%AD%E8%A7%86%E9%A2%91%E5%88%9B%E4%BD%9C%E6%95%B4%E7%90%86/</id>
    <published>2025-03-03T09:27:15.000Z</published>
    <updated>2025-03-03T10:01:10.360Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="pullquote mindmap mindmap-md"><ul><li>短视频工具<ul><li>通过文本生产视频<ul><li><a href="https://hailuoai.com/">海螺ai</a></li></ul></li><li>去码，图片修复<ul><li><a href="https://www.codeformer.cn/">CodeFormer</a></li></ul></li><li>通过图片生产唱歌视频ai<ul><li><a href="https://www.e-m-o.ai/">emo ai</a></li></ul></li><li>P图</li><li>魔力橡皮擦<a href="https://magicstudio.com/zh/magiceraser/">Magic Eraser</a></li></ul></li></ul></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;短视频工具&lt;ul&gt;
&lt;li&gt;通过文本生产视频&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hailuoai.com/&quot;&gt;海螺ai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库整理</title>
    <link href="http://yoursite.com/2025/03/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2025/03/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B4%E7%90%86/</id>
    <published>2025-03-01T03:35:46.000Z</published>
    <updated>2025-03-01T03:41:37.139Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="pullquote mindmap mindmap-md"><ul><li>数据库<ul><li>时序数据库<ul><li>嵌入式数据库 DuckDB</li><li>ClickHouse</li><li>DolphinDB</li><li>InfluxDB</li></ul></li><li>关系型数据库<ul><li>mysql</li><li>oracle</li></ul></li><li>图数据库<ul><li>neo4j</li></ul></li></ul></li></ul></blockquote><p>DolphinDB<br>    适合金融时序,不开源</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;数据库&lt;ul&gt;
&lt;li&gt;时序数据库&lt;ul&gt;
&lt;li&gt;嵌入式数据库 DuckDB&lt;/li&gt;
&lt;li&gt;ClickHouse&lt;/li&gt;
&lt;li&gt;DolphinDB&lt;/li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>go工具包整理</title>
    <link href="http://yoursite.com/2025/02/27/go%E7%9A%84%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2025/02/27/go%E7%9A%84%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6%E6%95%B4%E7%90%86/</id>
    <published>2025-02-27T13:15:00.000Z</published>
    <updated>2025-02-27T13:25:09.383Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="pullquote mindmap mindmap-md"><ul><li>go<ul><li>web框架<ul><li><a href="https://github.com/gin-gonic/gin">gin</a></li></ul></li><li>配置文件<ul><li><a href="https://github.com/spf13/viper">viper</a></li></ul></li><li>数据库连接<ul><li><a href="https://github.com/go-gorm/gorm">gorm</a></li></ul></li><li>数据操作<ul><li>goda</li><li><a href="https://github.com/gonum/gonum">gonum</a></li></ul></li><li>微服务<ul><li>go-kit</li></ul></li></ul></li></ul></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;go&lt;ul&gt;
&lt;li&gt;web框架&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gin-gonic/gin&quot;&gt;gin&lt;/a&gt;&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="go" scheme="http://yoursite.com/categories/go/"/>
    
    
    <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>运维历史信息监控-atop</title>
    <link href="http://yoursite.com/2025/02/02/atop/"/>
    <id>http://yoursite.com/2025/02/02/atop/</id>
    <published>2025-02-02T01:30:00.000Z</published>
    <updated>2025-02-18T11:44:17.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install atop -y</span><br></pre></td></tr></table></figure><h3 id="配置并启动-atop"><a href="#配置并启动-atop" class="headerlink" title="配置并启动 atop"></a>配置并启动 atop</h3><p>参考以下步骤，配置 atop 监控周期及日志保留时间。</p><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>vim &#x2F;etc&#x2F;sysconfig&#x2F;atop</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将 LOGINTERVAL=600 修改为 LOGINTERVAL=30，表示将默认的600s监控周期修改为30s。建议修改为30s，您可结合实际情况进行修改。</span><br><span class="line">将 LOGGENERATIONS=28 修改为 LOGGENERATIONS=7，表示将默认的日志保留时间28天修改为7天。为避免 atop 长时间运行占用太多磁盘空间，建议修改为7天，您可结合实际情况进行修改。</span><br><span class="line">修改完成后如下图所示：</span><br></pre></td></tr></table></figure><h3 id="重启配置"><a href="#重启配置" class="headerlink" title="重启配置"></a>重启配置</h3><p>systemctl restart atop</p><h3 id="分析日志"><a href="#分析日志" class="headerlink" title="分析日志"></a>分析日志</h3><p>atop -r &#x2F;var&#x2F;log&#x2F;atop&#x2F;atop_2021xxxx</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">您可在打开日志文件后，使用以下命令筛选所需数据：</span><br><span class="line">c：按照进程的 CPU 使用率降序筛选。</span><br><span class="line">m：按照进程的内存使用率降序筛选。</span><br><span class="line">d：按照进程的磁盘使用率降序筛选。</span><br><span class="line">a：按照进程资源综合使用率进行降序筛选。</span><br><span class="line">n：按照进程的网络使用率进行降序筛选（使用此命令需安装额外的内核模块，默认不支持）。</span><br><span class="line">t：跳转到下一个监控采集点。</span><br><span class="line">T：跳转到上一个监控采集点。</span><br><span class="line">b：指定时间点，格式为 YYYYMMDDhhmm。</span><br></pre></td></tr></table></figure><h4 id="查看指定日期内的历史指标日志。示例中，指定日期为2024年11月06日。"><a href="#查看指定日期内的历史指标日志。示例中，指定日期为2024年11月06日。" class="headerlink" title="查看指定日期内的历史指标日志。示例中，指定日期为2024年11月06日。"></a>查看指定日期内的历史指标日志。示例中，指定日期为2024年11月06日。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atop -r 20250206</span><br></pre></td></tr></table></figure><h4 id="查看指定日期内自指定时间起的历史指标日志。示例中，指定日期为2024年11月06日，开始时间为14-00。"><a href="#查看指定日期内自指定时间起的历史指标日志。示例中，指定日期为2024年11月06日，开始时间为14-00。" class="headerlink" title="查看指定日期内自指定时间起的历史指标日志。示例中，指定日期为2024年11月06日，开始时间为14:00。"></a>查看指定日期内自指定时间起的历史指标日志。示例中，指定日期为2024年11月06日，开始时间为14:00。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atop -r 20241106 -b 14:00</span><br></pre></td></tr></table></figure><h4 id="查看指定日期内，指定时间段的历史指标日志。示例中，指定的日期为2024年11月5日，时间段为00-04至00-08。"><a href="#查看指定日期内，指定时间段的历史指标日志。示例中，指定的日期为2024年11月5日，时间段为00-04至00-08。" class="headerlink" title="查看指定日期内，指定时间段的历史指标日志。示例中，指定的日期为2024年11月5日，时间段为00:04至00:08。"></a>查看指定日期内，指定时间段的历史指标日志。示例中，指定的日期为2024年11月5日，时间段为00:04至00:08。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atop -r 20241105 -b 00:04 -e 00:08</span><br></pre></td></tr></table></figure><h3 id="主要参数说明如下"><a href="#主要参数说明如下" class="headerlink" title="主要参数说明如下"></a>主要参数说明如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">ATOP 行：主机名、信息采样日期和时间点。</span><br><span class="line">PRC 行：进程整体运行情况。</span><br><span class="line">sys 及 user：CPU 被用于处理进程时，进程在内核态及用户态所占 CPU 的时间比例。</span><br><span class="line">#proc：进程总数。</span><br><span class="line">#zombie：僵死进程的数量。</span><br><span class="line">#exit：Atop 采样周期期间退出的进程数量。</span><br><span class="line">CPU 行：CPU 整体（即多核 CPU 作为一个整体 CPU 资源）的使用情况。CPU 行的各字段数值相加结果为 100%，N 为 CPU 核数。</span><br><span class="line">sys 及 user：CPU 被用于处理进程时，进程在内核态及用户态所占 CPU 的时间比例。</span><br><span class="line">irq：CPU 被用于处理中断的时间比例。</span><br><span class="line">idle：CPU 处在完全空闲状态的时间比例。</span><br><span class="line">wait：CPU 处在“进程等待磁盘 IO 导致 CPU 空闲”状态的时间比例。</span><br><span class="line">CPL 行：CPU 负载情况。</span><br><span class="line">avg1、avg5 和 avg15：过去1分钟、5分钟和15分钟内运行队列中的平均进程数量。</span><br><span class="line">csw：指示上下文交换次数。</span><br><span class="line">intr：指示中断发生次数。</span><br><span class="line">MEM 行：内存的使用情况。</span><br><span class="line">tot：物理内存总量。</span><br><span class="line">cache ：用于页缓存的内存大小。</span><br><span class="line">buff：用于文件缓存的内存大小。</span><br><span class="line">slab：系统内核占用的内存大小。</span><br><span class="line">SWP 行：交换空间的使用情况。</span><br><span class="line">tot：交换区总量。</span><br><span class="line">free：空闲交换空间大小。</span><br><span class="line">PAG 行：虚拟内存分页情况</span><br><span class="line">swin 及 swout：换入和换出内存页数。</span><br><span class="line">DSK 行：磁盘使用情况，每一个磁盘设备对应一列。如果有 sdb 设备，那么增加一行 DSK 信息。</span><br><span class="line">sda：磁盘设备标识。</span><br><span class="line">busy：磁盘忙时比例。</span><br><span class="line">read 及 write：读、写请求数量。</span><br><span class="line">NET 行：多列 NET 展示了网络状况，包括传输层（TCP 和 UDP）、IP 层以及各活动的网口信息。</span><br><span class="line">xxxxxi：各层或活动网口收包数目。</span><br><span class="line">xxxxxo：各层或活动网口发包数目。</span><br></pre></td></tr></table></figure><h3 id="参考操作文档"><a href="#参考操作文档" class="headerlink" title="参考操作文档"></a>参考操作文档</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://cloud.tencent.com/document/product/213/61086</span><br><span class="line">https://help.aliyun.com/zh/ecs/use-cases/use-the-atop-tool-to-monitor-linux-system-metrics?spm=5176.smartservice_service_create_ticket_step_2.0.0.6c8543ecjTvcos</span><br></pre></td></tr></table></figure><h3 id="衍生的信息"><a href="#衍生的信息" class="headerlink" title="衍生的信息"></a>衍生的信息</h3><p><a href="https://github.com/aristocratos/btop">btop,top的增强版</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装命令&quot;&gt;&lt;a href=&quot;#安装命令&quot; class=&quot;headerlink&quot; title=&quot;安装命令&quot;&gt;&lt;/a&gt;安装命令&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>rust 入门篇</title>
    <link href="http://yoursite.com/2025/01/09/rust%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2025/01/09/rust%E5%85%A5%E9%97%A8/</id>
    <published>2025-01-09T09:11:00.000Z</published>
    <updated>2025-01-09T10:52:32.467Z</updated>
    
    <content type="html"><![CDATA[<h3 id="rustc查看版本"><a href="#rustc查看版本" class="headerlink" title="rustc查看版本"></a>rustc查看版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustc --version</span><br></pre></td></tr></table></figure><h3 id="cargo-查看版本"><a href="#cargo-查看版本" class="headerlink" title="cargo 查看版本"></a>cargo 查看版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo --version</span><br></pre></td></tr></table></figure><h3 id="rust-升级到最新的稳定版本"><a href="#rust-升级到最新的稳定版本" class="headerlink" title="rust 升级到最新的稳定版本"></a>rust 升级到最新的稳定版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup update stable</span><br></pre></td></tr></table></figure><h3 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo new hello_cargo</span><br></pre></td></tr></table></figure><h3 id="构建已有的工程"><a href="#构建已有的工程" class="headerlink" title="构建已有的工程"></a>构建已有的工程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo build</span><br></pre></td></tr></table></figure><h3 id="查看rustup-版本，检查是否要更新"><a href="#查看rustup-版本，检查是否要更新" class="headerlink" title="查看rustup 版本，检查是否要更新"></a>查看rustup 版本，检查是否要更新</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup --version </span><br></pre></td></tr></table></figure><h3 id="更新rustup"><a href="#更新rustup" class="headerlink" title="更新rustup"></a>更新rustup</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup self update</span><br></pre></td></tr></table></figure><h3 id="安装rust格式化"><a href="#安装rust格式化" class="headerlink" title="安装rust格式化"></a>安装rust格式化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup component add rustfmt</span><br></pre></td></tr></table></figure><h2 id="多版本"><a href="#多版本" class="headerlink" title="多版本"></a>多版本</h2><h3 id="rust多版本显示"><a href="#rust多版本显示" class="headerlink" title="rust多版本显示"></a>rust多版本显示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup toolchain list</span><br></pre></td></tr></table></figure><h3 id="切换rust版本"><a href="#切换rust版本" class="headerlink" title="切换rust版本"></a>切换rust版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup default aarch64-apple-darwin</span><br></pre></td></tr></table></figure><h3 id="显示rust概况"><a href="#显示rust概况" class="headerlink" title="显示rust概况"></a>显示rust概况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup show</span><br></pre></td></tr></table></figure><h1 id="入门文档"><a href="#入门文档" class="headerlink" title="入门文档"></a>入门文档</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://kaisery.github.io/trpl-zh-cn/ch01-02-hello-world.html</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;rustc查看版本&quot;&gt;&lt;a href=&quot;#rustc查看版本&quot; class=&quot;headerlink&quot; title=&quot;rustc查看版本&quot;&gt;&lt;/a&gt;rustc查看版本&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="rust" scheme="http://yoursite.com/categories/rust/"/>
    
    
  </entry>
  
  <entry>
    <title>python工具包导航</title>
    <link href="http://yoursite.com/2025/01/09/python%E5%90%84%E7%A7%8D%E5%B7%A5%E5%85%B7%E5%8C%85%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2025/01/09/python%E5%90%84%E7%A7%8D%E5%B7%A5%E5%85%B7%E5%8C%85%E6%95%B4%E7%90%86/</id>
    <published>2025-01-09T01:42:00.000Z</published>
    <updated>2025-01-23T11:08:57.329Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="pullquote mindmap mindmap-md"><ul><li>python<ul><li>基本功能<ul><li>生成requirements.txt<ul><li>pipreqs</li></ul></li><li>生成本地执行包<ul><li><a href="https://www.warmjoke.com/2024/02/26/pyinstaller%E5%BA%94%E7%94%A8%E6%95%B4%E7%90%86/">pyinstaller</a></li></ul></li></ul></li><li>爬虫<ul><li>drissionPage</li><li>curl_cffi</li><li>selenium</li></ul></li><li>日志<ul><li>loguru</li></ul></li><li>科学计算<ul><li>pandas</li><li>numpy</li></ul></li><li>画图<ul><li>pillow</li></ul></li><li>动态包导入<ul><li>importlib</li></ul></li><li>文件操作<ul><li>shutil</li></ul></li></ul></li></ul></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;python&lt;ul&gt;
&lt;li&gt;基本功能&lt;ul&gt;
&lt;li&gt;生成requirements.txt&lt;ul&gt;
&lt;li&gt;pipreqs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>minicoda量化环境配置</title>
    <link href="http://yoursite.com/2024/12/30/minicoda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2024/12/30/minicoda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2024-12-30T04:56:00.000Z</published>
    <updated>2024-12-30T05:27:53.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="minicoda-安装"><a href="#minicoda-安装" class="headerlink" title="minicoda 安装"></a>minicoda 安装</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/miniconda3</span><br><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh</span><br><span class="line">bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3</span><br><span class="line">rm ~/miniconda3/miniconda.sh</span><br><span class="line">source ~/miniconda3/bin/activate</span><br><span class="line">conda init --all</span><br></pre></td></tr></table></figure><h1 id="为什么安装-minicoda"><a href="#为什么安装-minicoda" class="headerlink" title="为什么安装 minicoda"></a>为什么安装 minicoda</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器硬盘不够，anaconda3 基本上需要占用 8G得硬盘空间，小门小户有点受不了。minicode的初始包基本是1G以内。</span><br></pre></td></tr></table></figure><p>安装minicoda 之后的基础服务器配置，初始化的系统盘5.3g左右,相对anaconda3节省很多的空间。</p><p><img src="/images/pasted-25.png" alt="upload successful"></p><h1 id="创建最新的量化环境"><a href="#创建最新的量化环境" class="headerlink" title="创建最新的量化环境"></a>创建最新的量化环境</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py312 python=3.12.7</span><br></pre></td></tr></table></figure><h1 id="创建python默认环境"><a href="#创建python默认环境" class="headerlink" title="创建python默认环境"></a>创建python默认环境</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>设置成如下的配置。</p><p><img src="/images/pasted-26.png" alt="upload successful"></p><h1 id="安装supervisor"><a href="#安装supervisor" class="headerlink" title="安装supervisor"></a>安装supervisor</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y supervisor</span><br><span class="line">systemctl enable supervisord # 开机自启动</span><br><span class="line">systemctl start supervisord # 启动supervisord服务</span><br><span class="line">systemctl status supervisord # 查看supervisord服务状态</span><br><span class="line">ps -ef|grep supervisord # 查看是否存在supervisord进程</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;minicoda-安装&quot;&gt;&lt;a href=&quot;#minicoda-安装&quot; class=&quot;headerlink&quot; title=&quot;minicoda 安装&quot;&gt;&lt;/a&gt;minicoda 安装&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="量化" scheme="http://yoursite.com/tags/%E9%87%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>drissionPage 爬虫攻略</title>
    <link href="http://yoursite.com/2024/12/30/drissionPage-%E7%88%AC%E8%99%AB%E6%94%BB%E7%95%A5/"/>
    <id>http://yoursite.com/2024/12/30/drissionPage-%E7%88%AC%E8%99%AB%E6%94%BB%E7%95%A5/</id>
    <published>2024-12-30T01:51:00.000Z</published>
    <updated>2024-12-30T02:53:36.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单的代码示例"><a href="#简单的代码示例" class="headerlink" title="简单的代码示例"></a>简单的代码示例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> DrissionPage <span class="keyword">import</span> WebPage, ChromiumOptions</span><br><span class="line"><span class="comment"># 基于谷歌浏览器的配置</span></span><br><span class="line">options = ChromiumOptions()</span><br><span class="line"><span class="comment"># 无头设置</span></span><br><span class="line">options.headless(<span class="literal">True</span>)</span><br><span class="line">options.set_argument(<span class="string">&#x27;--no-sandbox&#x27;</span>)</span><br><span class="line"><span class="comment"># 可以设置代理的配置</span></span><br><span class="line"><span class="keyword">if</span> proxy:</span><br><span class="line">    options.set_proxy(proxy[<span class="string">&#x27;http&#x27;</span> <span class="keyword">if</span> <span class="string">&#x27;http&#x27;</span> <span class="keyword">in</span> proxy <span class="keyword">else</span> <span class="string">&#x27;https&#x27;</span>])</span><br><span class="line"><span class="comment"># 初始化 SessionPage 对象</span></span><br><span class="line">page = WebPage(timeout=<span class="number">50</span>, chromium_options=options)</span><br><span class="line"> page.get(baseurl)</span><br><span class="line">page.wait.ele_displayed(<span class="string">&#x27;__APP&#x27;</span>)</span><br><span class="line"><span class="keyword">match</span> = re.search(<span class="string">r&#x27;href=&quot;([^&quot;]*delisting\?[^&quot;]*)&quot;&#x27;</span>, page.html)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;&quot;</span><span class="number">12313</span><span class="string">&quot;)</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>和 selenium 类似，本来就是从 selenium 发展而来，但也可以实现request的方法，既可以爬去网页，也可以直接调用请求。</p><h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p><a href="https://drissionpage.cn/">https://drissionpage.cn/</a></p><h1 id="开源代码"><a href="#开源代码" class="headerlink" title="开源代码"></a>开源代码</h1><p><a href="https://gitee.com/PLA-huiziqin/DrissionPage?skip_mobile=true">https://gitee.com/PLA-huiziqin/DrissionPage?skip_mobile=true</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单的代码示例&quot;&gt;&lt;a href=&quot;#简单的代码示例&quot; class=&quot;headerlink&quot; title=&quot;简单的代码示例&quot;&gt;&lt;/a&gt;简单的代码示例&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>sublime命令整理</title>
    <link href="http://yoursite.com/2024/11/21/sublime%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2024/11/21/sublime%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</id>
    <published>2024-11-21T08:08:29.000Z</published>
    <updated>2024-11-21T08:20:37.519Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正则表达式数据替换"><a href="#正则表达式数据替换" class="headerlink" title="正则表达式数据替换"></a>正则表达式数据替换</h3><p>排除cid之后的字符串</p><p><img src="/images/pasted-22.png" alt="upload successful"></p><p>打开正则表达式模式</p><p><img src="/images/pasted-23.png" alt="upload successful"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;正则表达式数据替换&quot;&gt;&lt;a href=&quot;#正则表达式数据替换&quot; class=&quot;headerlink&quot; title=&quot;正则表达式数据替换&quot;&gt;&lt;/a&gt;正则表达式数据替换&lt;/h3&gt;&lt;p&gt;排除cid之后的字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/paste</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>excel命令整理</title>
    <link href="http://yoursite.com/2024/10/29/excel%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2024/10/29/excel%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</id>
    <published>2024-10-29T15:09:00.000Z</published>
    <updated>2024-10-29T15:28:17.915Z</updated>
    
    <content type="html"><![CDATA[<p>最近在整理对虾养殖的收入和支出相关的数据，发现excel里面的一些命令挺好用的，所以对自己需要用的命令做下整理</p><h1 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h1><h2 id="SUMIF"><a href="#SUMIF" class="headerlink" title="SUMIF"></a>SUMIF</h2><pre><code>=SUMIF(A2:A5, &quot;张三&quot;, C2:C5)翻译:c=0 for(An :(A2...A5))&#123;    if(An==&quot;张三&quot;)&#123;        c=Cn+c      &#125;&#125;return c</code></pre><h2 id="SUM"><a href="#SUM" class="headerlink" title="SUM"></a>SUM</h2><pre><code>=SUM(A2:A5)</code></pre><h2 id="SUMIFS"><a href="#SUMIFS" class="headerlink" title="SUMIFS"></a>SUMIFS</h2><pre><code>=SUMIFS(C2:C5, A2:A5, &quot;张三&quot;, B2:B5, &quot;产品B&quot;)</code></pre><p>  这个公式的意思是：在C2:C5的范围内求和，但是只包括A2:A5范围内是“张三”且B2:B5范围内是“产品B”的行。</p><h1 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h1><h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><pre><code>  =IF(B2&gt;=90, &quot;A&quot;, IF(B2&gt;=80, &quot;B&quot;, &quot;C&quot;))</code></pre><p>这个公式的意思是：如果B2单元格的成绩大于等于90分，则返回”A”；如果成绩大于等于80分但小于90分，则返回”B”；如果成绩小于80分，则返回”C”。</p><h3 id="应用到整列"><a href="#应用到整列" class="headerlink" title="应用到整列"></a>应用到整列</h3><p>当你在C2单元格输入上述公式后，你可以通过以下步骤将其应用到整列：</p><pre><code>点击C2单元格。将鼠标指针移动到单元格的右下角，直到鼠标指针变成一个小十字。点击并拖动这个小十字向下，直到你想要应用公式的所有行。这样，Excel就会自动将公式应用到C列的每个单元格，并且根据B列对应的成绩计算出等级。</code></pre><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><pre><code>确保B列的成绩数据是连续的，没有空行或非数字数据，否则公式可能会返回错误。如果你想要在公式中使用绝对引用（例如，当你复制公式到其他列时），你可以使用$符号，如$B2。这样，无论公式如何复制，引用的列始终是B列。    </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在整理对虾养殖的收入和支出相关的数据，发现excel里面的一些命令挺好用的，所以对自己需要用的命令做下整理&lt;/p&gt;
&lt;h1 id=&quot;求和&quot;&gt;&lt;a href=&quot;#求和&quot; class=&quot;headerlink&quot; title=&quot;求和&quot;&gt;&lt;/a&gt;求和&lt;/h1&gt;&lt;h2 id=&quot;SU</summary>
      
    
    
    
    <category term="excel" scheme="http://yoursite.com/categories/excel/"/>
    
    
    <category term="excel" scheme="http://yoursite.com/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>openssh制作rpm包对线上环境升级</title>
    <link href="http://yoursite.com/2024/09/28/openssh%E5%88%B6%E4%BD%9Crpm%E5%8C%85/"/>
    <id>http://yoursite.com/2024/09/28/openssh%E5%88%B6%E4%BD%9Crpm%E5%8C%85/</id>
    <published>2024-09-28T01:54:00.000Z</published>
    <updated>2024-10-06T08:07:20.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前置原因"><a href="#前置原因" class="headerlink" title="前置原因"></a>前置原因</h1><p>为了通过等保3，扫码提示一堆的openssh错误，openssh目前没有针对centos的最新包rpm，网上都是一些自行编译源码，然后升级的教程。但有一个担心，因为自行编译源吗，需要安装依赖包，有可能导致线上运行环境不稳定，所以还是想着自己生成rpm包，然后在测试环境测试通过之后再放到线上环境。<br><img src="/images/pasted-20.png" alt="upload successful"></p><h1 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h1><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><p>yum install rpm-build zlib-devel openssl-devel gcc perl-devel libXt-devel imake gtk2-devel krb5-devel pam-devel perl-IPC-Cmd</p><h2 id="下载对应的源码包"><a href="#下载对应的源码包" class="headerlink" title="下载对应的源码包"></a>下载对应的源码包</h2><p>下载最新的依赖包 x11-ssh-askpass包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sigmavirus24/x11-ssh-askpass</span><br></pre></td></tr></table></figure><p>下载最新的依赖包 openssl包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://openssl-library.org/source/</span><br></pre></td></tr></table></figure><p>下载最新openssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.openssh.com/portable.html</span><br></pre></td></tr></table></figure><h2 id="备份升级前配置文件"><a href="#备份升级前配置文件" class="headerlink" title="备份升级前配置文件"></a>备份升级前配置文件</h2><p>下面这两个文件如果不做备份，会在升级后自动修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><h2 id="编译openssl"><a href="#编译openssl" class="headerlink" title="编译openssl"></a>编译openssl</h2><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&#x27;t locate IPC/Cmd.pm in @INC (you may need to install the IPC::Cmd module)</span><br></pre></td></tr></table></figure><p>解决方案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-IPC-Cmd</span><br></pre></td></tr></table></figure><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf openssl-3.3.2.tar.gz </span><br><span class="line">cd openssl-3.3.2/</span><br></pre></td></tr></table></figure><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./config --prefix=/usr/local/openssl shared -fPIC</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="检查函数库"><a href="#检查函数库" class="headerlink" title="检查函数库"></a>检查函数库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldd /usr/local/openssl/bin/openssl  # 检查函数库</span><br></pre></td></tr></table></figure><h4 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h4><p>ln -s &#x2F;usr&#x2F;local&#x2F;openssl&#x2F;bin&#x2F;openssl &#x2F;usr&#x2F;bin&#x2F;openssl<br>ln -s &#x2F;usr&#x2F;local&#x2F;openssl&#x2F;include&#x2F;openssl &#x2F;usr&#x2F;include&#x2F;openssl</p><h4 id="添加动态链接库数据"><a href="#添加动态链接库数据" class="headerlink" title="添加动态链接库数据"></a>添加动态链接库数据</h4><p>echo “&#x2F;usr&#x2F;local&#x2F;openssl&#x2F;lib&#x2F;“ &gt;&gt; &#x2F;etc&#x2F;ld.so.conf</p><h4 id="更新函数库"><a href="#更新函数库" class="headerlink" title="更新函数库"></a>更新函数库</h4><p>ldconfig -v  </p><h4 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h4><p>openssl version  </p><h2 id="编译openssh"><a href="#编译openssh" class="headerlink" title="编译openssh"></a>编译openssh</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar xf openssh-9.6p1.tar.gz -C /home/</span><br><span class="line"></span><br><span class="line">mkdir -p /root/rpmbuild/&#123;SOURCES,SPECS&#125;</span><br><span class="line">cp /root/openssh-9.6p1.tar.gz /root/rpmbuild/SOURCES/</span><br><span class="line">cp /root/x11-ssh-askpass-1.2.4.1.tar.gz /root/rpmbuild/SOURCES/</span><br><span class="line">cp /home/openssh-9.6p1/contrib/redhat/openssh.spec /root/rpmbuild/SPECS/</span><br></pre></td></tr></table></figure><h3 id="rpmbuild-的知识介绍"><a href="#rpmbuild-的知识介绍" class="headerlink" title="rpmbuild 的知识介绍"></a>rpmbuild 的知识介绍</h3><p><a href="https://www.cnblogs.com/zhangxinglong/p/11904922.html">https://www.cnblogs.com/zhangxinglong/p/11904922.html</a></p><h2 id="rpm-构建"><a href="#rpm-构建" class="headerlink" title="rpm 构建"></a>rpm 构建</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpmbuild -ba openssh.spec </span><br></pre></td></tr></table></figure><p>执行成功的结果</p><p><img src="/images/pasted-21.png" alt="upload successful"></p><h2 id="通过rpm升级ssh版本。"><a href="#通过rpm升级ssh版本。" class="headerlink" title="通过rpm升级ssh版本。"></a>通过rpm升级ssh版本。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh openssh-* --nodeps --force</span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h1 id="执行的时候遇到的问题"><a href="#执行的时候遇到的问题" class="headerlink" title="执行的时候遇到的问题"></a>执行的时候遇到的问题</h1><h2 id="缺少libcrypto-so-3，libssl-so-3"><a href="#缺少libcrypto-so-3，libssl-so-3" class="headerlink" title="缺少libcrypto.so.3，libssl.so.3"></a>缺少libcrypto.so.3，libssl.so.3</h2><p>拷贝openssl里面的对应包到对应的&#x2F;usr&#x2F;lib64 环境中去。</p><h1 id="相关命令解析"><a href="#相关命令解析" class="headerlink" title="相关命令解析"></a>相关命令解析</h1><h2 id="ldd"><a href="#ldd" class="headerlink" title="ldd"></a>ldd</h2><pre><code>打印程序或者库文件所依赖的共享库列表</code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><pre><code>https://wangchujiang.com/linux-command/c/ldd.html</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前置原因&quot;&gt;&lt;a href=&quot;#前置原因&quot; class=&quot;headerlink&quot; title=&quot;前置原因&quot;&gt;&lt;/a&gt;前置原因&lt;/h1&gt;&lt;p&gt;为了通过等保3，扫码提示一堆的openssh错误，openssh目前没有针对centos的最新包rpm，网上都是一些自行编译</summary>
      
    
    
    
    <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>nginx自动更新</title>
    <link href="http://yoursite.com/2024/09/14/nginx/"/>
    <id>http://yoursite.com/2024/09/14/nginx/</id>
    <published>2024-09-14T05:23:00.000Z</published>
    <updated>2024-09-14T05:28:33.841Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进入yum配置库"><a href="#进入yum配置库" class="headerlink" title="进入yum配置库"></a>进入yum配置库</h3><p>cd &#x2F;etc&#x2F;yum.repos.d&#x2F;</p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>vi nginx.repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/操作系统版本/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h3 id="查找nginx"><a href="#查找nginx" class="headerlink" title="查找nginx"></a>查找nginx</h3><pre><code>yum search nginx</code></pre><h3 id="更新nginx"><a href="#更新nginx" class="headerlink" title="更新nginx"></a>更新nginx</h3><pre><code>yum update nginx</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;进入yum配置库&quot;&gt;&lt;a href=&quot;#进入yum配置库&quot; class=&quot;headerlink&quot; title=&quot;进入yum配置库&quot;&gt;&lt;/a&gt;进入yum配置库&lt;/h3&gt;&lt;p&gt;cd &amp;#x2F;etc&amp;#x2F;yum.repos.d&amp;#x2F;&lt;/p&gt;
&lt;h3 id</summary>
      
    
    
    
    <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>pyqt6 实现快手中控平台</title>
    <link href="http://yoursite.com/2024/07/03/pyqt6-%E5%AE%9E%E7%8E%B0%E5%BF%AB%E6%89%8B%E4%B8%AD%E6%8E%A7%E5%B9%B3%E5%8F%B0/"/>
    <id>http://yoursite.com/2024/07/03/pyqt6-%E5%AE%9E%E7%8E%B0%E5%BF%AB%E6%89%8B%E4%B8%AD%E6%8E%A7%E5%B9%B3%E5%8F%B0/</id>
    <published>2024-07-03T06:45:21.000Z</published>
    <updated>2024-07-29T14:18:41.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><pre><code>1.快手所有的消息汇集到中控平台。2.新消息过来需要有声音提示3.需要实现类似微信那样点击用户名，回复该用户的功能。4.消息框输入消息，按Enter键发送消息的功能。</code></pre><h1 id="需要代码实现"><a href="#需要代码实现" class="headerlink" title="需要代码实现"></a>需要代码实现</h1><h2 id="快手所有消息汇集到中控平台"><a href="#快手所有消息汇集到中控平台" class="headerlink" title="快手所有消息汇集到中控平台"></a>快手所有消息汇集到中控平台</h2><p>通过socket把快手的消息转发给中控，通过 pyqtSignal 转发给gui页面</p><p>server_socket.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">class Server:</span><br><span class="line"></span><br><span class="line">    def __init__(self, host, port):</span><br><span class="line">        self.data = &#x27;&#x27; # 需要发送的消息</span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.outputs = []  # 流出</span><br><span class="line">        self.inputs = []  # 流入</span><br><span class="line">        self.msg_queue = &#123;&#125;  # 这个字典用来存放不同连接的消息队列</span><br><span class="line">        self.online_conversition = &#123;&#125;  # 在线用户名列表</span><br><span class="line">        self.sock.bind((self.host, self.port))  # 套接字绑定到指定地址</span><br><span class="line">        self.inputs.append(self.sock)  # 将sock加入传入列表，可以监控连接请求</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def add_conn(self,conn):</span><br><span class="line">            self.inputs.append(conn)</span><br><span class="line">            self.outputs.append(conn)</span><br><span class="line">            self.msg_queue[conn] = queue.Queue()  # 新建conn和消息队列的键值对</span><br><span class="line"></span><br><span class="line">    # 根据待发送消息的类型做不同处理</span><br><span class="line">    def send_message(self,conversition:str,data:dict):</span><br><span class="line">        # 发送消息给对应的地址</span><br><span class="line">         # 发送消息给对应的地址</span><br><span class="line">        sock=  self.get_client(conversition=conversition)</span><br><span class="line">        if sock is None:</span><br><span class="line">            return False</span><br><span class="line">        msg=json.dumps(data)</span><br><span class="line">        self.msg_queue[sock].put(msg.encode(&quot;utf-8&quot;))</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get_client(self,conversition:str):</span><br><span class="line">        # 遍历所有的连接，获取所有的客户端</span><br><span class="line">        for key, val in self.online_conversition.items():</span><br><span class="line">            if &quot;conversition&quot; in val and val[&#x27;conversition&#x27;] == conversition:</span><br><span class="line">                return key</span><br><span class="line">        return None        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>server_thread.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">class ServerThread(QThread):</span><br><span class="line"></span><br><span class="line">    message_signal = pyqtSignal(dict)</span><br><span class="line"></span><br><span class="line">    def __init__(self, sockServer:Server):</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.sockServer = sockServer</span><br><span class="line">         # 定义字典型的signal，用于发送同步用户消息</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def handle_message(self,data,sock):</span><br><span class="line">        message=json.loads(data)</span><br><span class="line">        </span><br><span class="line">        if &quot;type&quot; in message and message[&#x27;type&#x27;] == &quot;heatbeat&quot;:</span><br><span class="line">                &quot;&quot;&quot;</span><br><span class="line">                监测消息是否是心跳消息，是心跳则更信息信息</span><br><span class="line">                &#123;&quot;conversition&quot;: &quot;测试直播-12313&quot;,type:&quot;heatbeat&quot;&#125;</span><br><span class="line">                &quot;&quot;&quot;</span><br><span class="line">                self.sockServer.online_conversition[sock]=&#123;&quot;last_heatbeat&quot;:time.time(),&quot;conversition&quot;:message[&#x27;conversition&#x27;]&#125;</span><br><span class="line">        elif &quot;type&quot; in message and message[&#x27;type&#x27;] == &quot;message&quot;:</span><br><span class="line">                &quot;&quot;&quot;</span><br><span class="line">                解析数据，并把数据放在一个日志文件里面。</span><br><span class="line">                    &#123;&quot;conversition&quot;: &quot;测试直播-12313&quot;,&quot;from&quot;:&quot;李四&quot;,&quot;content&quot;: &quot;12312312&quot;,time:12332423411,&quot;type&quot;:&quot;message&quot;&#125;</span><br><span class="line">                    &#123;&quot;conversition&quot;: &quot;\u4eac\u4e1c\u5bb6\u7535\u6e05\u6d17\u7279\u60e0\u4e13\u573a-12480794987&quot;, &quot;from&quot;: &quot;\uff20\u996d\u5c0f\u8431\uff08\u4eac\u4e1c\u5bb6\u7535\u6e05\u6d17\uff09&quot;, &quot;content&quot;: &quot;\u6709\u4ec0\u4e48\u95ee\u9898\u53ef\u4ee5\u6253\u5728\u516c\u5c4f\u4e0a\u54e6&quot;, &quot;time&quot;: 1718693761524, &quot;type&quot;: &quot;message&quot;&#125;</span><br><span class="line">                &quot;&quot;&quot;</span><br><span class="line">                self.sockServer.online_conversition[sock]=&#123;&quot;last_heatbeat&quot;:time.time(),&quot;conversition&quot;:message[&#x27;conversition&#x27;]&#125;</span><br><span class="line">                self.message_signal.emit(message) # 重置gui主线程有新的消息</span><br><span class="line"></span><br><span class="line">    # 监听请求</span><br><span class="line">    def listening(self):</span><br><span class="line">        self.sockServer.sock.listen(100)  # 可以挂起的最大连接数</span><br><span class="line">        print(&#x27;Server start at: %s:%s&#x27; % (self.sockServer.host, self.sockServer.port))</span><br><span class="line">        print(&#x27;wait for connection...&#x27;)</span><br><span class="line">        while True:</span><br><span class="line">            readable, writable, exceptional = select.select(self.sockServer.inputs, self.sockServer.outputs, self.sockServer.inputs)</span><br><span class="line">            for r in readable:</span><br><span class="line">                if r is self.sockServer.sock: </span><br><span class="line">                    # 表明有传入请求</span><br><span class="line">                    conn, addr = self.sockServer.sock.accept()</span><br><span class="line">                    print(&#x27;Connected by &#x27;, addr)</span><br><span class="line">                    self.sockServer.add_conn(conn=conn)</span><br><span class="line">                else:</span><br><span class="line">                    # 表示是已有的连接有传入数据</span><br><span class="line">                    body=&#x27;&#x27;</span><br><span class="line">                    try:</span><br><span class="line">                        l= r.recv(4)</span><br><span class="line">                        body_length=struct.unpack(&#x27;i&#x27;,l)[0] # 读取报文的长度</span><br><span class="line">                        body=r.recv(body_length)</span><br><span class="line">                    except:</span><br><span class="line">                        pass</span><br><span class="line">                    if body:</span><br><span class="line">                        # 如果接收到数据</span><br><span class="line">                        self.handle_message(body, r)</span><br><span class="line">                        body = &#x27;&#x27;  # 清空data</span><br><span class="line">                    else:</span><br><span class="line">                        # 连接已断开</span><br><span class="line">                        print(&quot;connection closed from &quot;, r.getpeername())</span><br><span class="line">                        if r in self.sockServer.outputs:</span><br><span class="line">                            # 就不再给它发消息了，移除outputs</span><br><span class="line">                            self.sockServer.outputs.remove(r)</span><br><span class="line">                            self.sockServer.inputs.remove(r)  # 从连接列表中也移去</span><br><span class="line"></span><br><span class="line">                        # 从在线用户中移除</span><br><span class="line">                        try:</span><br><span class="line">                            del  self.sockServer.msg_queue[r]</span><br><span class="line">                            del  self.sockServer.online_conversition[r]  # 删除对应的在线用户信息</span><br><span class="line">                        except:</span><br><span class="line">                            pass</span><br><span class="line">                        r.close()  # 关闭该连接</span><br><span class="line"></span><br><span class="line">            for w in writable:</span><br><span class="line">                if w in self.sockServer.msg_queue.keys() and not self.sockServer.msg_queue[w].empty():</span><br><span class="line">                    data = self.sockServer.msg_queue[w].get(False)</span><br><span class="line">                    w.send(data)    </span><br><span class="line"></span><br><span class="line">    # 覆盖Qthread的run方法，进行接收和发送信息的工作</span><br><span class="line">    def run(self):</span><br><span class="line">       self.listening()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="新消息过来需要有声音提示"><a href="#新消息过来需要有声音提示" class="headerlink" title="新消息过来需要有声音提示"></a>新消息过来需要有声音提示</h2><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">effect = QtMultimedia.QSoundEffect() <span class="comment">#短声音组件，</span></span><br><span class="line">effect.setSource(QUrl.fromLocalFile(f&#123;app_path()&#125;/voice/receive.wav<span class="string">&quot;)) # 声音文件，目前只支持wav格式，mp3有问题</span></span><br><span class="line"><span class="string">effect.setVolume(1) # 设置音量</span></span><br><span class="line"><span class="string">effect.play() # 播放声音</span></span><br><span class="line"><span class="string">    </span></span><br></pre></td></tr></table></figure></code></pre><h2 id="实现微信那样的汽泡"><a href="#实现微信那样的汽泡" class="headerlink" title="实现微信那样的汽泡"></a>实现微信那样的汽泡</h2><h3 id="一种基于小懵白小趣谈的画笔画图实现"><a href="#一种基于小懵白小趣谈的画笔画图实现" class="headerlink" title="一种基于小懵白小趣谈的画笔画图实现"></a>一种基于小懵白小趣谈的画笔画图实现</h3><p>但操作起来太过复杂，而且后面的代码也开始收费了，所以以另外一种方法实现，只是看代码还算有意思，就记录了一下，并不符合需求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">window_height = <span class="number">10</span></span><br><span class="line">begin_width_spacing = <span class="number">20</span></span><br><span class="line">begin_height_spacing = <span class="number">16</span></span><br><span class="line">icon_width = <span class="number">40</span></span><br><span class="line">icon_height = <span class="number">40</span></span><br><span class="line">text_width_spacing = <span class="number">12</span></span><br><span class="line">text_height_spacing = <span class="number">12</span></span><br><span class="line">triangle_width = <span class="number">6</span></span><br><span class="line">triangle_height = <span class="number">10</span></span><br><span class="line">triangle_height_spacing = <span class="number">10</span></span><br><span class="line">text_min_width = <span class="number">0</span></span><br><span class="line">min_width = <span class="number">0</span></span><br><span class="line">text_max_width = <span class="number">0</span></span><br><span class="line">real_width = <span class="number">0</span></span><br><span class="line">text_height = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MessageItemWidget</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent=<span class="literal">None</span>,fromUser=<span class="string">&quot;&quot;</span>,content=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(MessageItemWidget,<span class="variable language_">self</span>).__init__(parent=parent)</span><br><span class="line">        <span class="variable language_">self</span>.content=content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 重写paintEvent 否则不能使用样式表定义外观</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paintEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="variable language_">self</span>.init_data() <span class="comment"># 获取文本长度、气泡框架问题</span></span><br><span class="line">        <span class="keyword">global</span> text_min_width, min_width, text_max_width, real_width, text_height, window_height</span><br><span class="line">        <span class="comment"># 初始化QPainter对象，一支画笔</span></span><br><span class="line">        painter = QtGui.QPainter(<span class="variable language_">self</span>)</span><br><span class="line">        painter.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.SmoothPixmapTransform)</span><br><span class="line">        font = QtGui.QFont()</span><br><span class="line">        font.setFamily(<span class="string">&quot;实体&quot;</span>)</span><br><span class="line">        font.setPointSize(<span class="number">12</span>)</span><br><span class="line">        painter.setFont(font)</span><br><span class="line">   </span><br><span class="line">        <span class="comment"># 画框架</span></span><br><span class="line">        bubbleRect = QRect(begin_width_spacing + icon_width, begin_height_spacing,</span><br><span class="line">                           triangle_width + text_width_spacing + text_max_width + text_width_spacing,</span><br><span class="line">                           text_height_spacing + text_height + text_height_spacing)</span><br><span class="line">        painter.setPen(Qt.NoPen)</span><br><span class="line">        painter.setBrush(QtGui.QBrush(QtGui.QColor(<span class="number">180</span>, <span class="number">180</span>, <span class="number">180</span>)))</span><br><span class="line">        painter.drawRoundedRect(bubbleRect.x() + triangle_width, bubbleRect.y(), bubbleRect.width() - triangle_width,</span><br><span class="line">                                bubbleRect.height(), <span class="number">18</span>, <span class="number">18</span>)</span><br><span class="line">        <span class="comment"># 实现颜色渐变                        </span></span><br><span class="line">        linearGradient = QtGui.QLinearGradient(QPointF(bubbleRect.x() + triangle_width + <span class="number">1</span>, bubbleRect.y() + <span class="number">1</span>),</span><br><span class="line">                                         QPointF(bubbleRect.x() + bubbleRect.width() - <span class="number">1</span>,</span><br><span class="line">                                                 bubbleRect.y() + bubbleRect.height() - <span class="number">1</span>))</span><br><span class="line">        linearGradient.setColorAt(<span class="number">0</span>, QtGui.QColor(<span class="number">151</span>, <span class="number">220</span>, <span class="number">227</span>))</span><br><span class="line">        linearGradient.setColorAt(<span class="number">0.25</span>, QtGui.QColor(<span class="number">151</span>, <span class="number">220</span>, <span class="number">227</span>))</span><br><span class="line">        linearGradient.setColorAt(<span class="number">0.5</span>, QtGui.QColor(<span class="number">151</span>, <span class="number">220</span>, <span class="number">227</span>))</span><br><span class="line">        linearGradient.setColorAt(<span class="number">0.75</span>, QtGui.QColor(<span class="number">151</span>, <span class="number">220</span>, <span class="number">227</span>))</span><br><span class="line">        linearGradient.setColorAt(<span class="number">1</span>, QtGui.QColor(<span class="number">151</span>, <span class="number">220</span>, <span class="number">227</span>))</span><br><span class="line">        painter.setBrush(linearGradient)</span><br><span class="line">        <span class="comment"># 画圆</span></span><br><span class="line">        painter.drawRoundedRect(bubbleRect.x() + triangle_width + <span class="number">1</span>, bubbleRect.y() + <span class="number">1</span>,</span><br><span class="line">                                bubbleRect.width() - triangle_width - <span class="number">2</span>, bubbleRect.height() - <span class="number">2</span>, <span class="number">18</span>, <span class="number">18</span>)</span><br><span class="line">        painter.setPen(QtGui.QPen(QtGui.QColor(<span class="number">244</span>, <span class="number">164</span>, <span class="number">96</span>)))</span><br><span class="line">        painter.drawPolygon(QPointF(bubbleRect.x(), bubbleRect.y() + triangle_height_spacing - <span class="number">4</span>),</span><br><span class="line">                            QPointF(bubbleRect.x() + triangle_width + <span class="number">1</span>, bubbleRect.y() + triangle_height_spacing),</span><br><span class="line">                            QPointF(bubbleRect.x() + <span class="number">6</span> + <span class="number">1</span>, bubbleRect.y() + <span class="number">10</span> + <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        painter.setPen(QtGui.QPen(QtGui.QColor(<span class="number">180</span>, <span class="number">180</span>, <span class="number">180</span>)))</span><br><span class="line">        painter.drawLine(QPointF(bubbleRect.x(), bubbleRect.y() + <span class="number">10</span> - <span class="number">4</span>),</span><br><span class="line">                         QPointF(bubbleRect.x() + <span class="number">6</span>, bubbleRect.y() + <span class="number">10</span>))</span><br><span class="line">        painter.drawLine(QPointF(bubbleRect.x(), bubbleRect.y() + <span class="number">10</span> - <span class="number">4</span>),</span><br><span class="line">                         QPointF(bubbleRect.x() + <span class="number">6</span>, bubbleRect.y() + <span class="number">10</span> + <span class="number">10</span>))</span><br><span class="line">        <span class="comment"># 画文字</span></span><br><span class="line">        penText = QtGui.QPen()</span><br><span class="line">        penText.setColor(QtGui.QColor(<span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>))</span><br><span class="line">        painter.setPen(penText)</span><br><span class="line">        option = QtGui.QTextOption(Qt.AlignmentFlag.AlignLeft | Qt.AlignmentFlag.AlignVCenter)</span><br><span class="line">        option.setWrapMode(QtGui.QTextOption.WrapMode.WrapAtWordBoundaryOrAnywhere)</span><br><span class="line">        painter.drawText(</span><br><span class="line">            QRectF(bubbleRect.x() + triangle_width + text_width_spacing, bubbleRect.y() + text_height_spacing,</span><br><span class="line">                   text_max_width, text_height), <span class="variable language_">self</span>.content, option)          </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">init_data</span>(<span class="params">self</span>):</span><br><span class="line">        font = QtGui.QFont()</span><br><span class="line">        font.setFamily(<span class="string">&quot;实体&quot;</span>)</span><br><span class="line">        font.setPointSize(<span class="number">12</span>)</span><br><span class="line">        metrics = QtGui.QFontMetrics(font)</span><br><span class="line">        <span class="keyword">global</span> text_min_width, min_width,text_max_width,real_width, text_height, window_height</span><br><span class="line">        <span class="keyword">if</span> metrics.horizontalAdvance(<span class="string">&quot;A&quot;</span>) * <span class="number">2</span> + begin_height_spacing * <span class="number">1.5</span> &gt; text_width_spacing:</span><br><span class="line">            text_min_width = begin_height_spacing * <span class="number">1.5</span> - text_width_spacing</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            text_min_width = <span class="number">0</span></span><br><span class="line">        min_width = begin_width_spacing + icon_width + triangle_width + text_width_spacing + text_width_spacing + icon_width + begin_width_spacing</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.width()&lt; min_width+text_min_width:</span><br><span class="line">            <span class="variable language_">self</span>.setMinimumWidth(min_width + text_min_width)</span><br><span class="line">        text_max_width = <span class="variable language_">self</span>.width() - min_width</span><br><span class="line">        real_width = metrics.width(<span class="variable language_">self</span>.content)</span><br><span class="line">        <span class="keyword">if</span> real_width &lt; text_max_width:</span><br><span class="line">            text_max_width = real_width</span><br><span class="line">            <span class="keyword">if</span> text_height_spacing+metrics.height()+text_height_spacing&gt;triangle_height_spacing+triangle_height+triangle_height_spacing:</span><br><span class="line">                text_height = metrics.height()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                text_height = triangle_height_spacing + triangle_height + triangle_height_spacing</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag = Qt.TextFlag.TextWordWrap</span><br><span class="line">            textRect = QRect(<span class="number">0</span>, <span class="number">0</span>, text_max_width, <span class="number">0</span>)</span><br><span class="line">                        <span class="comment"># 自动换行</span></span><br><span class="line">            textRect = metrics.boundingRect(textRect, flag, <span class="variable language_">self</span>.content)</span><br><span class="line">            text_height = textRect.height()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="实现的效果"><a href="#实现的效果" class="headerlink" title="实现的效果"></a>实现的效果</h4><p><img src="/images/pasted-19.png" alt="upload successful"></p><h2 id="消息框输入消息，按Enter键发送消息的功能"><a href="#消息框输入消息，按Enter键发送消息的功能" class="headerlink" title="消息框输入消息，按Enter键发送消息的功能"></a>消息框输入消息，按Enter键发送消息的功能</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/pyqt/examples">https://github.com/pyqt/examples</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;1.快手所有的消息汇集到中控平台。
2.新消息过来需要有声音提示
3.需要实现类似微信那样点击用户名，回复该用户的功能。
4</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>conda命令整理</title>
    <link href="http://yoursite.com/2024/06/27/conda%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2024/06/27/conda%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</id>
    <published>2024-06-27T08:46:00.000Z</published>
    <updated>2024-07-20T01:21:33.469Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建新的python环境"><a href="#新建新的python环境" class="headerlink" title="新建新的python环境"></a>新建新的python环境</h3><pre><code>conda create --name yourEnv python=2.7</code></pre><h3 id="若想要在创建环境同时安装python的一些包："><a href="#若想要在创建环境同时安装python的一些包：" class="headerlink" title="若想要在创建环境同时安装python的一些包："></a>若想要在创建环境同时安装python的一些包：</h3><pre><code>conda create -n yourEnv python=3.6 numpy pandas</code></pre><h3 id="若想在别人虚拟环境的基础上创建自己的环境："><a href="#若想在别人虚拟环境的基础上创建自己的环境：" class="headerlink" title="若想在别人虚拟环境的基础上创建自己的环境："></a>若想在别人虚拟环境的基础上创建自己的环境：</h3><pre><code>conda create --name &lt;yourEnv&gt; --clone &lt;baseEnv&gt;</code></pre><h3 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h3><pre><code>conda remove -n py36 --all</code></pre><h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><pre><code>conda activate py36</code></pre><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><pre><code>conda install panadas</code></pre><h3 id="搜索包"><a href="#搜索包" class="headerlink" title="搜索包"></a>搜索包</h3><pre><code>conda search panadas</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;新建新的python环境&quot;&gt;&lt;a href=&quot;#新建新的python环境&quot; class=&quot;headerlink&quot; title=&quot;新建新的python环境&quot;&gt;&lt;/a&gt;新建新的python环境&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;conda create --name yo</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>mysql 表分区</title>
    <link href="http://yoursite.com/2024/05/17/mysql-%E8%A1%A8%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2024/05/17/mysql-%E8%A1%A8%E5%88%86%E5%8C%BA/</id>
    <published>2024-05-17T06:13:34.000Z</published>
    <updated>2024-05-20T00:35:02.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单的操作"><a href="#简单的操作" class="headerlink" title="简单的操作"></a>简单的操作</h1><h5 id="创建一个简单的分区表"><a href="#创建一个简单的分区表" class="headerlink" title="创建一个简单的分区表"></a>创建一个简单的分区表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `kerns_test2` (</span><br><span class="line">  `id` int NOT NULL,</span><br><span class="line">  `name` varchar(50) DEFAULT NULL,</span><br><span class="line">  `create_time` date NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`,`create_time`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3</span><br><span class="line">PARTITION BY RANGE (year(`create_time`))</span><br><span class="line">(PARTITION p0 VALUES LESS THAN (1990) ENGINE = InnoDB,</span><br><span class="line"> PARTITION p1 VALUES LESS THAN (1995) ENGINE = InnoDB,</span><br><span class="line"> PARTITION p2 VALUES LESS THAN (2000) ENGINE = InnoDB,</span><br><span class="line"> PARTITION p3 VALUES LESS THAN (2005) ENGINE = InnoDB,</span><br><span class="line"> PARTITION p4 VALUES LESS THAN (2010) ENGINE = InnoDB,</span><br><span class="line"> PARTITION p5 VALUES LESS THAN (2015) ENGINE = InnoDB);</span><br></pre></td></tr></table></figure><h5 id="对timestamp-进行分区，只能以下面这种方式分区"><a href="#对timestamp-进行分区，只能以下面这种方式分区" class="headerlink" title="对timestamp 进行分区，只能以下面这种方式分区"></a>对timestamp 进行分区，只能以下面这种方式分区</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE range_timestamp (</span><br><span class="line">    id INT,</span><br><span class="line">    hiredate TIMESTAMP</span><br><span class="line">)</span><br><span class="line">PARTITION BY RANGE ( UNIX_TIMESTAMP(hiredate) ) (</span><br><span class="line">    PARTITION p1 VALUES LESS THAN ( UNIX_TIMESTAMP(&#x27;2015-12-02 00:00:00&#x27;) ),</span><br><span class="line">    PARTITION p2 VALUES LESS THAN ( UNIX_TIMESTAMP(&#x27;2015-12-03 00:00:00&#x27;) )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="重新生成分区"><a href="#重新生成分区" class="headerlink" title="重新生成分区"></a>重新生成分区</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name REORGANIZE PARTITION partition_names INTO (partition_definitions)</span><br></pre></td></tr></table></figure><h5 id="对表创建分区"><a href="#对表创建分区" class="headerlink" title="对表创建分区"></a>对表创建分区</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `kerns_test2` PARTITION BY RANGE(days) (</span><br><span class="line">    PARTITION `p197001` VALUES LESS THAN (19700101),</span><br><span class="line">    PARTITION `p202003` VALUES LESS THAN (20200301),</span><br><span class="line">    PARTITION `p202004` VALUES LESS THAN (20200401)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="新增一个分区"><a href="#新增一个分区" class="headerlink" title="新增一个分区"></a>新增一个分区</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table kerns_test2 add partition(partition p2 values less than maxvalue);</span><br></pre></td></tr></table></figure><h5 id="删除一个分区表"><a href="#删除一个分区表" class="headerlink" title="删除一个分区表"></a>删除一个分区表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table kerns_test2 drop partition p1;</span><br></pre></td></tr></table></figure><h5 id="查看某个分区的数据"><a href="#查看某个分区的数据" class="headerlink" title="查看某个分区的数据"></a>查看某个分区的数据</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM kerns_test2 PARTITION (p2);</span><br></pre></td></tr></table></figure><h5 id="查看表里面每个分区的表数据"><a href="#查看表里面每个分区的表数据" class="headerlink" title="查看表里面每个分区的表数据"></a>查看表里面每个分区的表数据</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT PARTITION_NAME,TABLE_ROWS FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_NAME = &#x27;kerns_test2&#x27;;</span><br></pre></td></tr></table></figure><h5 id="清空某个分区的数据"><a href="#清空某个分区的数据" class="headerlink" title="清空某个分区的数据"></a>清空某个分区的数据</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table kerns_test2 truncate partition p0;</span><br></pre></td></tr></table></figure><h1 id="需要注意的事项。"><a href="#需要注意的事项。" class="headerlink" title="需要注意的事项。"></a>需要注意的事项。</h1><ol><li>MySQL 8.0 目前不支持使用InnoDB 或以外的任何存储引擎对表进行分区</li><li>分区字段必须是整数类型或解析为整数的表达式。</li><li>分区字段建议设置为NOT NULL，若某行数据分区字段为null，在RANGE分区中，该行数据会划分到最小的分区里。</li><li>MySQL分区中如果存在主键或唯一键，则分区列必须包含在其中。</li><li>Innodb分区表不支持外键。</li><li>更改sql_mode模式可能影响分区表的表现。</li><li>分区表不影响自增列。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单的操作&quot;&gt;&lt;a href=&quot;#简单的操作&quot; class=&quot;headerlink&quot; title=&quot;简单的操作&quot;&gt;&lt;/a&gt;简单的操作&lt;/h1&gt;&lt;h5 id=&quot;创建一个简单的分区表&quot;&gt;&lt;a href=&quot;#创建一个简单的分区表&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git 版本管理</title>
    <link href="http://yoursite.com/2024/03/15/git-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2024/03/15/git-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</id>
    <published>2024-03-15T01:48:49.000Z</published>
    <updated>2024-06-05T06:59:30.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-tag-管理"><a href="#git-tag-管理" class="headerlink" title="git tag 管理"></a>git tag 管理</h2><p>创建本地分支: git tag release-1.0.1 -m “drone调整”</p><p>推送本地所有分支: git push –tags</p><p>删除本地tag分支: git tag -d release-1.0.2</p><p>同步本地分和远程分支：git push origin :refs&#x2F;tags&#x2F;release-1.0.2</p><h3 id="tag-管理的好处"><a href="#tag-管理的好处" class="headerlink" title="tag 管理的好处"></a>tag 管理的好处</h3><ol><li>能够很好的做版本管理，随时可以通过tag分支进行版本的回退，比如如果你所有的代码的发布都是通过master版本发布，一旦你需要做代码回退的处理，就只能修改代码取做回退，而代码修改难免出现问题，当然也可以使用docker镜像这种做版本管理。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;git-tag-管理&quot;&gt;&lt;a href=&quot;#git-tag-管理&quot; class=&quot;headerlink&quot; title=&quot;git tag 管理&quot;&gt;&lt;/a&gt;git tag 管理&lt;/h2&gt;&lt;p&gt;创建本地分支: git tag release-1.0.1 -m “dron</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>curl_cffi绕过TLS/JA3指纹,爬虫利器</title>
    <link href="http://yoursite.com/2024/02/29/%E7%BB%95%E8%BF%875S%E7%9B%BE%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2024/02/29/%E7%BB%95%E8%BF%875S%E7%9B%BE%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86/</id>
    <published>2024-02-29T04:17:00.000Z</published>
    <updated>2024-12-30T02:43:22.356Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>  最近在做pilot.ultiverse.io&#x2F;?inviteCode&#x3D;QHWKK的自动化脚本处理，<br>  使用常用的 python request 一直被拒绝，说是机器人访问。朋友刚开始说是cloud flare的5s盾。结果找了一天，发现表现形式和网上的资料完全对不上。后来，朋友给了一份据说能访问到网站的代码，看了下使用了curl_cffi在访问网站。网上找了下资料，发现原来是因为不同的http访问工具有不同的指纹信息，不管上层怎么仿真，下层的工具有自己的指纹信息。不懂底层代码，认知盲区的问题。</p><h3 id="指纹识别网站"><a href="#指纹识别网站" class="headerlink" title="指纹识别网站"></a>指纹识别网站</h3><p><a href="https://tls.browserleaks.com/json">https://tls.browserleaks.com/json</a><br><a href="https://tls.peet.ws/">https://tls.peet.ws/</a><br><a href="https://kawayiyi.com/tls">https://kawayiyi.com/tls</a></p><p>直接打开网站，或者调用请求，就能找到对应工具的指纹信息。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://github.com/yifeikong/curl_cffi/blob/main/README-zh.md">https://github.com/yifeikong/curl_cffi/blob/main/README-zh.md</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;p&gt;  最近在做pilot.ultiverse.io&amp;#x2F;?inviteCode&amp;#x3D;QHWKK的自动化脚本处理，&lt;br&gt;  使用常</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>pyinstaller应用整理</title>
    <link href="http://yoursite.com/2024/02/26/pyinstaller%E5%BA%94%E7%94%A8%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2024/02/26/pyinstaller%E5%BA%94%E7%94%A8%E6%95%B4%E7%90%86/</id>
    <published>2024-02-26T10:41:00.000Z</published>
    <updated>2024-06-27T08:41:58.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装pyinstaller"><a href="#安装pyinstaller" class="headerlink" title="安装pyinstaller"></a>安装pyinstaller</h1><p>pip install pyinstaller</p><h2 id="如果安装失败，可执行以下两步："><a href="#如果安装失败，可执行以下两步：" class="headerlink" title="如果安装失败，可执行以下两步："></a>如果安装失败，可执行以下两步：</h2><p>1）“pip install pywin32”</p><p>2）“pip install wheel”</p><p>3）再试一下“pip install pyinstaller”</p><h1 id="执行生成命令"><a href="#执行生成命令" class="headerlink" title="执行生成命令"></a>执行生成命令</h1><h2 id="单文件打包"><a href="#单文件打包" class="headerlink" title="单文件打包"></a>单文件打包</h2><p>pyinstaller -F *.py</p><h2 id="多文件打包"><a href="#多文件打包" class="headerlink" title="多文件打包"></a>多文件打包</h2><ol><li>通过 pyi-makespec  *.py 会生成 .spec文件，修改spec的相关配置如下</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: python ; coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Analysis(</span><br><span class="line">    [<span class="string">&#x27;start_up.py&#x27;</span>],</span><br><span class="line">    pathex=[],</span><br><span class="line">    binaries=[],</span><br><span class="line">    datas=[],</span><br><span class="line">    hiddenimports=[<span class="string">&#x27;frozen_dir.py&#x27;</span>,<span class="string">&#x27;locallife_server.py&#x27;</span>,<span class="string">&#x27;locallife_gui.py&#x27;</span>],</span><br><span class="line">    hookspath=[],</span><br><span class="line">    hooksconfig=&#123;&#125;,</span><br><span class="line">    runtime_hooks=[],</span><br><span class="line">    excludes=[],</span><br><span class="line">    noarchive=<span class="literal">False</span>,</span><br><span class="line">    optimize=<span class="number">0</span>,</span><br><span class="line">)</span><br><span class="line">pyz = PYZ(a.pure)</span><br><span class="line"></span><br><span class="line">exe = EXE(</span><br><span class="line">    pyz,</span><br><span class="line">    a.scripts,</span><br><span class="line">    a.binaries,</span><br><span class="line">    a.datas,</span><br><span class="line">    [],</span><br><span class="line">    name=<span class="string">&#x27;locallife_server&#x27;</span>,</span><br><span class="line">    debug=<span class="literal">False</span>,</span><br><span class="line">    bootloader_ignore_signals=<span class="literal">False</span>,</span><br><span class="line">    strip=<span class="literal">False</span>,</span><br><span class="line">    upx=<span class="literal">True</span>,</span><br><span class="line">    upx_exclude=[],</span><br><span class="line">    runtime_tmpdir=<span class="literal">None</span>,</span><br><span class="line">    console=<span class="literal">True</span>,</span><br><span class="line">    disable_windowed_traceback=<span class="literal">False</span>,</span><br><span class="line">    argv_emulation=<span class="literal">True</span>,</span><br><span class="line">    target_arch=<span class="literal">None</span>,</span><br><span class="line">    codesign_identity=<span class="literal">None</span>,</span><br><span class="line">    entitlements_file=<span class="literal">None</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2: 执行命令 pyinstaller *.spec</p><h2 id="命令参数介绍："><a href="#命令参数介绍：" class="headerlink" title="命令参数介绍："></a>命令参数介绍：</h2><p>-F 表示生成单个可执行文件</p><p>-w 表示去掉控制台窗口，这在GUI界面时非常有用。不过如果是命令行程序的话那就把这个选项删除</p><p>-p 表示你自己自定义需要加载的类路径，一般情况下用不到</p><p>-i 表示可执行文件的图标</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="1-文件路径的问题"><a href="#1-文件路径的问题" class="headerlink" title="1.文件路径的问题"></a>1.文件路径的问题</h2><p>在源码里面通过os.path.dirname(<strong>file</strong>)就可以找到相对路径，如果通过pyinstaller打包会找不到文件路径，需要通过下面的代码去适配。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def app_path():</span><br><span class="line">    &quot;&quot;&quot;Returns the base application path.&quot;&quot;&quot;</span><br><span class="line">    if hasattr(sys, &#x27;frozen&#x27;):</span><br><span class="line">        # Handles PyInstaller</span><br><span class="line">        return os.path.dirname(sys.executable)  #使用pyinstaller打包后的exe目录</span><br><span class="line">    return os.path.dirname(__file__)     </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装pyinstaller&quot;&gt;&lt;a href=&quot;#安装pyinstaller&quot; class=&quot;headerlink&quot; title=&quot;安装pyinstaller&quot;&gt;&lt;/a&gt;安装pyinstaller&lt;/h1&gt;&lt;p&gt;pip install pyinstaller&lt;/p</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
    <category term="打包" scheme="http://yoursite.com/tags/%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>curl 命令整理</title>
    <link href="http://yoursite.com/2023/04/10/curl-%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2023/04/10/curl-%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</id>
    <published>2023-04-10T03:27:00.000Z</published>
    <updated>2023-04-10T03:44:14.944Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自动跳转"><a href="#自动跳转" class="headerlink" title="自动跳转"></a>自动跳转</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L www.sina.com</span><br></pre></td></tr></table></figure><h3 id="显示头信息"><a href="#显示头信息" class="headerlink" title="显示头信息"></a>显示头信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i www.sina.com</span><br></pre></td></tr></table></figure><h3 id="显示请求显示各项时间指标"><a href="#显示请求显示各项时间指标" class="headerlink" title="显示请求显示各项时间指标"></a>显示请求显示各项时间指标</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o /dev/null -s -w ‘%&#123;time_total&#125;’ http://www.miotour.com</span><br><span class="line">curl -o /dev/null -s -w ‘%&#123;http_code&#125;’ http://www.miotour.com</span><br><span class="line">curl -o /dev/null -s -w %&#123;http_code&#125;:%&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125; http://www.miotour.com</span><br></pre></td></tr></table></figure><h3 id="显示通信信息"><a href="#显示通信信息" class="headerlink" title="显示通信信息"></a>显示通信信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -v www.sina.com</span><br><span class="line">curl --trace output.txt www.sina.com</span><br><span class="line">curl --trace-ascii output.txt www.sina.com</span><br></pre></td></tr></table></figure><h3 id="post-请求"><a href="#post-请求" class="headerlink" title="post 请求"></a>post 请求</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -d &quot;user=Summer&amp;passwd=12345678&quot; &quot;http://127.0.0.1:8080/check_your_status&quot;</span><br><span class="line"></span><br><span class="line">curl -X POST --data &quot;data=xxx&amp;data1=1231&quot; example.com/form.cgi</span><br><span class="line">curl -X POST &quot;http://192.168.2.43:8801/graph/hashrate/search?minerType=1&amp;timeType=123&quot; -H &quot;accept: */*&quot; -H &quot;userId: 12&quot;</span><br><span class="line"></span><br><span class="line">post方法还可以这样，传递json数据</span><br><span class="line">curl -H &quot;Content-Type:application/json&quot; -X POST --data &#x27;&#123;&quot;message&quot;: &quot;sunshine&quot;&#125;&#x27; http://localhost:8000/</span><br></pre></td></tr></table></figure><h3 id="表达编码"><a href="#表达编码" class="headerlink" title="表达编码"></a>表达编码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST--data-urlencode &quot;date=April 1&quot; example.com/form.cgi</span><br></pre></td></tr></table></figure><h3 id="添加头信息"><a href="#添加头信息" class="headerlink" title="添加头信息"></a>添加头信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --user-agent &quot;[User Agent]&quot; [URL]</span><br><span class="line">curl --cookie &quot;name=xxx&quot; www.example.com</span><br></pre></td></tr></table></figure><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -T wordpress.zip ftp://james:123456@202.121.137.58/path/to/backup/</span><br><span class="line">curl -T data.tar.gz -u james sftp://202.121.137.58/</span><br></pre></td></tr></table></figure><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><p>重定向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L -o &#x27;file.zip&#x27; &#x27;http://example.com/download.php?fileID=foo&#x27;</span><br></pre></td></tr></table></figure><p>下载需要用户名，密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -O ftp://james:123456@202.121.137.58:21/path/to/backup.tar.gz</span><br><span class="line">curl -O http://james:123456@202.121.137.58/file/path/data.tar.gz</span><br></pre></td></tr></table></figure><p>节省带框</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O --compressed &#x27;http://example.com/large.report-tab.html&#x27;</span><br></pre></td></tr></table></figure><p>显示下载进度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -# -O http://wordpress.org/latest.zip</span><br></pre></td></tr></table></figure><p>重命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o wordpress-3.8.zip &#x27;http://wordpress.org/latest.zip&#x27;</span><br></pre></td></tr></table></figure><p>带加密的连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl --ftp-ssl -u james:123456 -O ftp://202.121.137.58:21/backups/07/07/2012/mysql.blog.sql.tar.gz</span><br><span class="line">curl -u james -O sftp://202.121.137.58/backups/data.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;自动跳转&quot;&gt;&lt;a href=&quot;#自动跳转&quot; class=&quot;headerlink&quot; title=&quot;自动跳转&quot;&gt;&lt;/a&gt;自动跳转&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>kubectl 的命令收集</title>
    <link href="http://yoursite.com/2023/03/21/kubectl-%E7%9A%84%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
    <id>http://yoursite.com/2023/03/21/kubectl-%E7%9A%84%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/</id>
    <published>2023-03-21T06:40:00.000Z</published>
    <updated>2023-04-10T03:43:56.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pod相关"><a href="#pod相关" class="headerlink" title="pod相关"></a>pod相关</h2><h3 id="获取某个项目的包含的pod"><a href="#获取某个项目的包含的pod" class="headerlink" title="获取某个项目的包含的pod"></a>获取某个项目的包含的pod</h3><p>kubectl get pod -ncentralsystem</p><h2 id="日志相关"><a href="#日志相关" class="headerlink" title="日志相关"></a>日志相关</h2><h3 id="查看某个pod日志"><a href="#查看某个pod日志" class="headerlink" title="查看某个pod日志"></a>查看某个pod日志</h3><p>kubectl logs -f api-interface-6d489d7f49-7j4b7 -ncentralsystem</p><h2 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h2><h3 id="查看某个配置"><a href="#查看某个配置" class="headerlink" title="查看某个配置"></a>查看某个配置</h3><p>kubectl get cm centralsystem-mongodb-cm -ncentralsystem -oyaml</p><h3 id="删除某个配置"><a href="#删除某个配置" class="headerlink" title="删除某个配置"></a>删除某个配置</h3><p>kubectl delete cm mongodb-cert</p><h2 id="镜像里面内容"><a href="#镜像里面内容" class="headerlink" title="镜像里面内容"></a>镜像里面内容</h2><h3 id="查看镜像的内容"><a href="#查看镜像的内容" class="headerlink" title="查看镜像的内容"></a>查看镜像的内容</h3><p>kubectl exec -it api-interface-f644fdd64-z4999 sh -ncentralsystem</p><h2 id="查看某个镜像的配置信息"><a href="#查看某个镜像的配置信息" class="headerlink" title="查看某个镜像的配置信息"></a>查看某个镜像的配置信息</h2><p>kubectl describe pods&#x2F;api-interface-576475f4f5-k6sln -ncentralsystem</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;pod相关&quot;&gt;&lt;a href=&quot;#pod相关&quot; class=&quot;headerlink&quot; title=&quot;pod相关&quot;&gt;&lt;/a&gt;pod相关&lt;/h2&gt;&lt;h3 id=&quot;获取某个项目的包含的pod&quot;&gt;&lt;a href=&quot;#获取某个项目的包含的pod&quot; class=&quot;header</summary>
      
    
    
    
    <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
</feed>
